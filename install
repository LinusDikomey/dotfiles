#!/bin/bash

set -e

echo "Installing Linus' Arch Linux Hyprland Config"
echo "This should be run as the user everything should be installed for"
echo "You are $(whoami), correct?"
read -p "press Enter to continue ..."

cd ~
mkdir -p .config

echo "Updating system"
sudo pacman -Syu

echo "Installing development packages"
sudo pacman -S --needed base-devel git rustup

echo "Installing rust"
rustup default stable
rustup component add rust-analyzer

if command -v paru &> /dev/null ; then
    echo "paru already exists, skipping step"
else
    echo "Cloning and building paru"
    git clone https://aur.archlinux.org/paru.git
    cd paru
    makepkg -si
    cd ~
    rm -rf paru
fi

if [ -d "dotfiles" ] ; then
    echo "dotfiles folder already exists, skipping clone"
else
    echo "Cloning dotfiles"
    git clone git@github.com:LinusDikomey/dotfiles
fi

cd dotfiles

echo "Linking configs"
./scripts/link_configs

# ~/dotfiles/scripts/install_helix

echo "Installing packages"
paru -S --needed $(cat packages)

read -p "install nvidia packages from ~/dotfiles/packages_nvidia (y/n):" yn
case $yn in
    [yY] )
        echo "You will also have to do additional (a bit complicated) steps when using nvidia. Please follow the steps explained at https://wiki.hyprland.org/Nvidia/ immediately after the installation is finished."
        read -p "READ THE ABOVE, then press Enter to continue ..."
        paru -S --needed $(cat packages_nvidia)
        ;;
    * )
        echo "not installing nvidia packages"
        echo "you will have to remove the nvidia-specific env variables at ~/dotfiles/config/hypr/hyprland.conf (the section is clearly marked)"
        echo "you can still install them yourself with paru -S (cat ~/dotfiles/packages_nvidia)"
        read -p "READ THE ABOVE, then press Enter to continue ..."
        ;;
esac

echo "Setting shell to nu"
chsh -s /bin/nu

echo "Setting git configs"
git config --global core.editor nvim
# git config --global url.git@github.com:.insteadof https://github.com/

echo "Enabling services. Some of these might not work properly, so errors are allowed in this section"
set +e
sudo systemctl enable --now sddm
sudo systemctl enable --now NetworkManager
sudo systemctl enable --user --now pipewire-pulse
sudo systemctl enable --user --now pipewire
sudo systemctl enable --user --now wireplumber
sudo systemctl enable --user --now dunst
set -e

echo "Seting up sddm"
set +e
sddm_login_prompt=$(read -p "Enter Login Text: ")
sudo ~/dotfiles/scripts/setup_sddm ~/wallpaper.png "$sddm_login_prompt"
set -e

echo
echo "Installation is completed!"
echo
echo "You can set a wallpaper by placing it at ~/wallpaper.png"
echo "Have fun :D"

neofetch
